[{"path":"https://docs.ropensci.org/camsRad/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://docs.ropensci.org/camsRad/articles/CAMS_solar_data.html","id":"cams-radiation-service","dir":"Articles","previous_headings":"","what":"CAMS Radiation Service","title":"Working with CAMS solar data","text":"CAMS Radiation Service provides time series global, direct, diffuse irradiations horizontal surface, direct Irradiation normal plane actual weather conditions well clear-sky conditions. data can accessed manually CAMS Radiation Service site. service part Copernicus Atmosphere Monitoring Service (CAMS). geographical coverage field--view Meteosat satellite, roughly speaking Europe, Africa, Atlantic Ocean, Middle East (-66 66 degrees latitudes longitudes). time coverage data 2004-02-01 2 days ago. Data available time step ranging 15 min 1 month. service allows time steps 1 min well, interpolated values 15 min time steps (accounting changes clear-sky conditions). horizontal resolution original pixel Meteosat images, 3-5 km. CAMS Radiation Service currently (2016-11-01) limited amount requests 15 per day. limit may evolve.","code":""},{"path":"https://docs.ropensci.org/camsRad/articles/CAMS_solar_data.html","id":"authentication","dir":"Articles","previous_headings":"","what":"Authentication","title":"Working with CAMS solar data","text":"access CAMS Radiation Service need register http://www.soda-pro.com/web-services/radiation/cams-radiation-service. email use registration step used authentication, need set cams_set_user().","code":"# Authentication cams_set_user(\"your@email.com\") # An email registered at soda-pro.com"},{"path":"https://docs.ropensci.org/camsRad/articles/CAMS_solar_data.html","id":"retrieve-hourly-solar-data","dir":"Articles","previous_headings":"","what":"Retrieve hourly solar data","title":"Working with CAMS solar data","text":"cams_get_radiation() cams_get_radiation() convenience wrappers retrieves CAMS solar data straight R data frame. example bellow retrieves hourly radiation data location 60° latitude 15° longitude period 2016-01-01 2016-01-15. seen cams_get_radiation() prints additional information data, can suppressed wrapping call suppressMessages(). Next date frame printed. first column holds timestamp information. follows convention giving solar radiation sum previous hour. E.g. timestamp 14:00 shows solar radiation 13:00-14:00.","code":"library(camsRad)  df <- cams_get_radiation(   lat=60, lng=15, # Latitude & longitude coordinates    date_begin=\"2016-07-01\", date_end=\"2016-07-01\", # Date range   time_step=\"PT01H\") # Use hourly time step print(df)"},{"path":"https://docs.ropensci.org/camsRad/articles/CAMS_solar_data.html","id":"advanced-retrievals","dir":"Articles","previous_headings":"","what":"Advanced retrievals","title":"Working with CAMS solar data","text":"use data formats save data disk need use cams_api(). example bellow writes daily solar radiation netCDF format disk. need ncdf4 package installed. Note timestamp follows convention giving solar radiation sum previous time step. often correct working hourly data. working daily (monthly) data common timestamp starting point summation. df$timestamp-3600*24part achieves daily data. get data csv json format instead netCDF, just change format parameter “application/csv” “application/json” (filename extension .csv .json respectively).","code":"library(ncdf4)  filename <- paste0(tempfile(), \".nc\")  r <- cams_api(   60, 15, \"2016-06-01\", \"2016-07-1\", # Latitude/longitude and date range    format=\"application/x-netcdf\", # specifies output format as netCDF   time_step = \"P01D\", # daily sum is specified   filename=filename)  # Access the on disk stored netCDF file nc <- nc_open(filename)    # List names of available variables names(nc$var)  # Create data.frame with datetime and global horizontal irradiation df <- data.frame(   timestamp = as.POSIXct(nc$dim$time$vals, \"UTC\", origin=\"1970-01-01\"),   GHI = ncvar_get(nc, \"GHI\")) df$timestamp <- df$timestamp-3600*24 # shift timestamp 24 hours backwards  nc_close(nc) # close connection  # And plot it par(mar=c(4.5,4,0.8,1)) plot(df, type=\"b\", ylab=\"GHI, Wh/m2,day\", xlab=\"2016\")"},{"path":"https://docs.ropensci.org/camsRad/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lukas Lundstrom. Author, maintainer.","code":""},{"path":"https://docs.ropensci.org/camsRad/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lundstrom L (2024). camsRad: Client CAMS Radiation Service. R package version 0.3.0.9001, https://github.com/ropensci/camsRad, https://docs.ropensci.org/camsRad.","code":"@Manual{,   title = {camsRad: Client for CAMS Radiation Service},   author = {Lukas Lundstrom},   year = {2024},   note = {R package version 0.3.0.9001, https://github.com/ropensci/camsRad},   url = {https://docs.ropensci.org/camsRad}, }"},{"path":"https://docs.ropensci.org/camsRad/index.html","id":"camsrad","dir":"","previous_headings":"","what":"Client for CAMS Radiation Service","title":"Client for CAMS Radiation Service","text":"camsRad R client CAMS Radiation Service. CAMS Radiation Service provides time series global, direct, diffuse irradiations horizontal surface, direct irradiation normal plane actual weather conditions well clear-sky conditions. geographical coverage field--view Meteosat satellite, roughly speaking Europe, Africa, Atlantic Ocean, Middle East (-66° 66° latitudes longitudes). time coverage data 2004-02-01 2 days ago. Data available time step ranging 15 min 1 month. Target audience researchers, developers consultants need high resolution solar radiations time series.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/camsRad/index.html","id":"install","dir":"","previous_headings":"Quick start","what":"Install","title":"Client for CAMS Radiation Service","text":"Dev version GitHub.","code":"# CRAN version install.packages(\"camsRad\")  # Or Github version if (!require('devtools')) install.packages('devtools') devtools::install_github(\"ropensci/camsRad\") library(\"camsRad\")"},{"path":"https://docs.ropensci.org/camsRad/index.html","id":"authentication","dir":"","previous_headings":"Quick start","what":"Authentication","title":"Client for CAMS Radiation Service","text":"access CAMS Radiation Service need register http://www.soda-pro.com/web-services/radiation/cams-radiation-service. email use registration step used authentication, need set cams_set_user().","code":"# Authentication cams_set_user(\"your@email.com\") # An email registered at soda-pro.com"},{"path":"https://docs.ropensci.org/camsRad/index.html","id":"example-1","dir":"","previous_headings":"Quick start","what":"Example 1","title":"Client for CAMS Radiation Service","text":"Get hourly CAMS solar data R data frame. location 60° latitude 15° longitude, period 2016-01-01 2016-01-15.","code":"df <- cams_get_radiation(   lat=60, lng=15,    date_begin=\"2016-07-01\",    date_end=\"2016-07-01\") print(df)"},{"path":"https://docs.ropensci.org/camsRad/index.html","id":"example-2","dir":"","previous_headings":"Quick start","what":"Example 2","title":"Client for CAMS Radiation Service","text":"Retrieve daily CAMS solar data netCDF format. need ncdf4 package installed.","code":"library(ncdf4)  filename <- paste0(tempfile(), \".nc\")  r <- cams_api(   60, 15, \"2016-06-01\", \"2016-06-10\",    format=\"application/x-netcdf\",   time_step = \"P01D\",   filename=filename)  # Access the on disk stored ncdf4 file  nc <- nc_open(filename)  # list names of available variables names(nc$var)  # create data.frame with timestamp and global horizontal irradiation and plot it df <- data.frame(   timestamp = as.POSIXct(nc$dim$time$vals, \"UTC\", origin=\"1970-01-01\"),   GHI = ncvar_get(nc, \"GHI\"))  plot(df, type=\"l\")  nc_close(nc)"},{"path":"https://docs.ropensci.org/camsRad/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"Client for CAMS Radiation Service","text":"package functions herein provided , without guarantee. Please note project released Contributor Code Conduct. participating project agree abide terms. Please report issues bugs. doesn´t knit. add following .md file –>","code":""},{"path":"https://docs.ropensci.org/camsRad/reference/camsRad.html","id":null,"dir":"Reference","previous_headings":"","what":"R client for CAMS radiation service — camsRad","title":"R client for CAMS radiation service — camsRad","text":"CAMS radiation service provides time series global, direct, diffuse irradiations horizontal surface, direct irradiation normal plane actual weather conditions well clear-sky conditions. geographical coverage field--view Meteosat satellite, roughly speaking Europe, Africa, Atlantic Ocean, Middle East (-66 66 degrees latitudes longitudes). time coverage data 2004-02-01 2 days ago. Data available time step ranging 15 min 1 month.","code":""},{"path":"https://docs.ropensci.org/camsRad/reference/cams_api.html","id":null,"dir":"Reference","previous_headings":"","what":"API client for\nCAMS\nradiation service — cams_api","title":"API client for\nCAMS\nradiation service — cams_api","text":"API client CAMS radiation service","code":""},{"path":"https://docs.ropensci.org/camsRad/reference/cams_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"API client for\nCAMS\nradiation service — cams_api","text":"","code":"cams_api(lat, lng, date_begin, date_end, alt = -999,   time_step = \"PT01H\", time_ref = \"UT\", verbose = FALSE,   service = \"get_cams_radiation\", format = \"application/csv\",   filename = \"\")"},{"path":"https://docs.ropensci.org/camsRad/reference/cams_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"API client for\nCAMS\nradiation service — cams_api","text":"lat Latitude, decimal degrees. Required lng Longitude, decimal degrees. Required date_begin Start date 'yyyy-mm-dd' string. Required date_end End date 'yyyy-mm-dd' string. Required alt Altitude meters, use -999 let CAMS decide. Default -99 time_step Aggregation: 'PT01M' minutes, 'PT15M' 15 minutes, 'PT01H' hourly, 'P01D' daily, 'P01M' monthly. Deafult 'PT01H' time_ref Time reference:'UT' universal time, 'TST' true solar time. Default 'UT' verbose TRUE verbose output. Default \"FALSE\" service 'get_mcclear' CAMS McClear data, 'get_cams_radiation' CAMS radiation data. Default 'get_cams_radiation' format 'application/csv', 'application/json', 'application/x-netcdf' 'text/csv'. Default 'application/csv' filename path file disk write . empty, data kept memory. Default empty","code":""},{"path":"https://docs.ropensci.org/camsRad/reference/cams_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"API client for\nCAMS\nradiation service — cams_api","text":"list(ok=TRUE/FALSE, response=response). ok=TRUE, response   response httr::GET. ok=FALSE, response holds exception text","code":""},{"path":"https://docs.ropensci.org/camsRad/reference/cams_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"API client for\nCAMS\nradiation service — cams_api","text":"","code":"if (FALSE) { library(ncdf4)  filename <- paste0(tempfile(), \".nc\")  # API call to CAMS r <- cams_api(   60, 15,                       # latitude=60, longitude=15   \"2016-06-01\", \"2016-06-10\",   # for 2016-06-01 to 2016-06-10   time_step=\"PT01H\",            # hourly data   service=\"get_cams_radiation\", # CAMS radiation   format=\"application/x-netcdf\",# netCDF format   filename=filename)            # file to save to  # Access the on disk stored ncdf4 file nc <- nc_open(filename) # list names of available variables names(nc$var)  # create data.frame with timestamp and global horizontal irradiation df <- data.frame(datetime=as.POSIXct(nc$dim$time$vals, \"UTC\",                                      origin=\"1970-01-01\"),                  GHI = ncvar_get(nc, \"GHI\"))  plot(df, type=\"l\")  nc_close(nc) }"},{"path":"https://docs.ropensci.org/camsRad/reference/cams_get_mcclear.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve McClear clear sky solar radiation data — cams_get_mcclear","title":"Retrieve McClear clear sky solar radiation data — cams_get_mcclear","text":"Retrieve McClear clear sky solar radiation data","code":""},{"path":"https://docs.ropensci.org/camsRad/reference/cams_get_mcclear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve McClear clear sky solar radiation data — cams_get_mcclear","text":"","code":"cams_get_mcclear(lat, lng, date_begin, date_end, time_step = \"PT01H\",   alt = -999, verbose = FALSE)"},{"path":"https://docs.ropensci.org/camsRad/reference/cams_get_mcclear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve McClear clear sky solar radiation data — cams_get_mcclear","text":"lat Latitude, decimal degrees. Required lng Longitude, decimal degrees. Required date_begin Start date 'yyyy-mm-dd' string. Required date_end End date 'yyyy-mm-dd' string. Required time_step Aggregation: 'PT01M' minutes, 'PT15M' 15 minutes, 'PT01H' hourly, 'P01D' daily, 'P01M' monthly. Deafult 'PT01H' alt Altitude meters, use -999 let CAMS decide. Default -99 verbose TRUE verbose output. Default \"FALSE\"","code":""},{"path":"https://docs.ropensci.org/camsRad/reference/cams_get_mcclear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve McClear clear sky solar radiation data — cams_get_mcclear","text":"data frame requested solar data","code":""},{"path":"https://docs.ropensci.org/camsRad/reference/cams_get_mcclear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve McClear clear sky solar radiation data — cams_get_mcclear","text":"","code":"if (FALSE) { df <- cams_get_mcclear(   lat=60, lng=15, date_begin=\"2016-01-01\", date_end=\"2016-01-15\") print(head(df)) }"},{"path":"https://docs.ropensci.org/camsRad/reference/cams_get_radiation.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve CAMS solar radiation data — cams_get_radiation","title":"Retrieve CAMS solar radiation data — cams_get_radiation","text":"Retrieve CAMS solar radiation data","code":""},{"path":"https://docs.ropensci.org/camsRad/reference/cams_get_radiation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve CAMS solar radiation data — cams_get_radiation","text":"","code":"cams_get_radiation(lat, lng, date_begin, date_end, time_step = \"PT01H\",   alt = -999, verbose = FALSE)"},{"path":"https://docs.ropensci.org/camsRad/reference/cams_get_radiation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve CAMS solar radiation data — cams_get_radiation","text":"lat Latitude, decimal degrees. Required lng Longitude, decimal degrees. Required date_begin Start date 'yyyy-mm-dd' string. Required date_end End date 'yyyy-mm-dd' string. Required time_step Aggregation: 'PT01M' minutes, 'PT15M' 15 minutes, 'PT01H' hourly, 'P01D' daily, 'P01M' monthly. Deafult 'PT01H' alt Altitude meters, use -999 let CAMS decide. Default -99 verbose TRUE verbose output. Default \"FALSE\"","code":""},{"path":"https://docs.ropensci.org/camsRad/reference/cams_get_radiation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve CAMS solar radiation data — cams_get_radiation","text":"data frame requested solar data","code":""},{"path":"https://docs.ropensci.org/camsRad/reference/cams_get_radiation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve CAMS solar radiation data — cams_get_radiation","text":"","code":"if (FALSE) { # Get hourly solar radiation data df <- cams_get_radiation(   lat=60, lng=15,   date_begin=\"2016-06-01\", date_end=\"2016-06-15\") head(df)  # Get daily solar radiation data df <- cams_get_radiation(   lat=60, lng=15,   date_begin=\"2016-06-01\", date_end=\"2016-06-15\",   time_step=\"P01D\") head(df) }"},{"path":"https://docs.ropensci.org/camsRad/reference/cams_set_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Set username used for authentication by CAMS radiation service — cams_set_user","title":"Set username used for authentication by CAMS radiation service — cams_set_user","text":"Set username used authentication CAMS radiation service","code":""},{"path":"https://docs.ropensci.org/camsRad/reference/cams_set_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set username used for authentication by CAMS radiation service — cams_set_user","text":"","code":"cams_set_user(username)"},{"path":"https://docs.ropensci.org/camsRad/reference/cams_set_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set username used for authentication by CAMS radiation service — cams_set_user","text":"username Email registered soda-pro.com. Required","code":""},{"path":"https://docs.ropensci.org/camsRad/reference/cams_set_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set username used for authentication by CAMS radiation service — cams_set_user","text":"","code":"if (FALSE) { # cams_set_user(\"your@email.com\") # An email registered at soda-pro.com }"},{"path":"https://docs.ropensci.org/camsRad/news/index.html","id":"-camsrad-030-2016-11-07","dir":"Changelog","previous_headings":"","what":"# camsRad 0.3.0 (2016-11-07)","title":"# camsRad 0.3.0 (2016-11-07)","text":"CRAN release: 2016-11-30 Compliance rOpenSci review ### MINOR IMPROVEMENTS covr::codecov() badge included testing removed dependency readr package return data.frame instead tibble new authentication method examples improved documentation cams_api stops error httr calls errir returned content","code":""},{"path":"https://docs.ropensci.org/camsRad/news/index.html","id":"-camsrad-020-2016-08-22","dir":"Changelog","previous_headings":"","what":"# camsRad 0.2.0 (2016-08-22)","title":"# camsRad 0.2.0 (2016-08-22)","text":"Realese onboarding rOpenSci ### MINOR IMPROVEMENTS Exported functions documented examples README extended examples vignette added Travis-CI added Test testhat added","code":""},{"path":"https://docs.ropensci.org/camsRad/news/index.html","id":"-camsrad-010-2016-08-18","dir":"Changelog","previous_headings":"","what":"# camsRad 0.1.0 (2016-08-18)","title":"# camsRad 0.1.0 (2016-08-18)","text":"Initial public release","code":""}]
